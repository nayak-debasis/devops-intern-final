1. Overview

This setup demonstrates how to configure Grafana Loki and Promtail 
to collect and view logs from Docker containers on a local environment.

Loki is a log aggregation system, and Promtail is its log shipping agent 
that sends logs from containers or system files to Loki.

2. start Loki (Docker)

# Pull and run Loki container
docker run -d --name=loki \
  -p 3100:3100 \
  grafana/loki:2.9.0

# Verify Loki is running
docker ps

# Access Loki API to check status
curl http://localhost:3100/ready


3. Configure Promtail
# Create Promtail config file (promtail-config.yaml)
# Example contents:

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://host.docker.internal:3100/loki/api/v1/push

scrape_configs:
  - job_name: varlogs
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log


4. Start Promtail (Docker)

# Run Promtail container and mount config file
docker run -d --name=promtail \
  -v /var/log:/var/log \
  -v "$(pwd)/promtail-config.yaml:/etc/promtail/config.yaml" \
  grafana/promtail:2.9.0

# Check logs to verify Promtail is running
docker logs promtail


5. Viewing Logs

# Use Lokiâ€™s API to query logs directly
curl -G -s "http://localhost:3100/loki/api/v1/query" \
  --data-urlencode 'query={job="varlogs"}'




